---
# Persistent Volumes (usando storage class local-path de k3d)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: n8n-storage-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 2Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-storage-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 5Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ollama-storage-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 10Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: qdrant-storage-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 2Gi

---
# Postgres (Versión Corregida)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:16-alpine
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: postgres-secrets
          volumeMounts:
            - name: postgres-storage  # Nombre del volumen
              mountPath: /var/lib/postgresql/data
          readinessProbe:
            exec:
              command:
                - sh
                - "-c"
                - "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"
            initialDelaySeconds: 5
            periodSeconds: 5
      # Sección de volúmenes faltante
      volumes:
        - name: postgres-storage  # Definición del volumen
          persistentVolumeClaim:
            claimName: postgres-storage-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

---
# n8n Import Job
apiVersion: batch/v1
kind: Job
metadata:
  name: n8n-import
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: n8n-import
          image: n8nio/n8n:latest
          command: ["/bin/sh", "-c", "n8n import:credentials --separate --input=/backup/credentials && n8n import:workflow --separate --input=/backup/workflows"]
          envFrom:
            - secretRef:
                name: n8n-secrets
            - secretRef:
                name: postgres-secrets
          env:
            - name: DB_POSTGRESDB_HOST
              value: postgres
          volumeMounts:
            - name: backup
              mountPath: /backup
      volumes:
        - name: backup
          persistentVolumeClaim:
            claimName: n8n-storage-pvc

---
# n8n Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n
spec:
  selector:
    matchLabels:
      app: n8n
  template:
    metadata:
      labels:
        app: n8n
    spec:
      initContainers:
        - name: wait-for-dependencies
          image: busybox
          command: ['sh', '-c', 'until nc -z postgres 5432; do echo "Waiting for Postgres..."; sleep 2; done']
      containers:
        - name: n8n
          image: n8nio/n8n:latest
          ports:
            - containerPort: 5678
          envFrom:
            - secretRef:
                name: n8n-secrets
            - secretRef:
                name: postgres-secrets
          env:
            - name: DB_POSTGRESDB_HOST
              value: postgres
          volumeMounts:
            - name: n8n-storage
              mountPath: /home/node/.n8n
            - name: shared-data
              mountPath: /data/shared
      volumes:
        - name: n8n-storage
          persistentVolumeClaim:
            claimName: n8n-storage-pvc
        - name: shared-data
          hostPath:
            path: /tmp/shared-data
            type: DirectoryOrCreate

---
apiVersion: v1
kind: Service
metadata:
  name: n8n
spec:
  type: NodePort
  selector:
    app: n8n
  ports:
    - protocol: TCP
      port: 5678
      targetPort: 5678
      nodePort: 31000

---
# Qdrant
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qdrant
spec:
  selector:
    matchLabels:
      app: qdrant
  template:
    metadata:
      labels:
        app: qdrant
    spec:
      containers:
        - name: qdrant
          image: qdrant/qdrant
          ports:
            - containerPort: 6333
          volumeMounts:
            - name: qdrant-storage
              mountPath: /qdrant/storage
      volumes:
        - name: qdrant-storage
          persistentVolumeClaim:
            claimName: qdrant-storage-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: qdrant
spec:
  type: NodePort
  selector:
    app: qdrant
  ports:
    - protocol: TCP
      port: 6333
      targetPort: 6333
      nodePort: 31001

---
# Ollama (CPU only)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ollama
spec:
  selector:
    matchLabels:
      app: ollama
  template:
    metadata:
      labels:
        app: ollama
    spec:
      containers:
        - name: ollama
          image: ollama/ollama:latest
          ports:
            - containerPort: 11434
          volumeMounts:
            - name: ollama-storage
              mountPath: /root/.ollama
      volumes:
        - name: ollama-storage
          persistentVolumeClaim:
            claimName: ollama-storage-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: ollama
spec:
  selector:
    app: ollama
  ports:
    - protocol: TCP
      port: 11434
      targetPort: 11434

---
# Ollama Init Job
apiVersion: batch/v1
kind: Job
metadata:
  name: ollama-pull
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: ollama-pull
          image: ollama/ollama:latest
          command: ["/bin/sh", "-c", "sleep 10 && ollama pull llama3.1 && ollama pull nomic-embed-text"]
          env:
            - name: OLLAMA_HOST
              value: "ollama:11434"
          volumeMounts:
            - name: ollama-storage
              mountPath: /root/.ollama
      volumes:
        - name: ollama-storage
          persistentVolumeClaim:
            claimName: ollama-storage-pvc
